apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'realm-android'


android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.puzzlebench.clean_marvel_kotlin"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "PRIVATE_API_KEY_VALUE", '"230d47542548cb3a1e7171d791fb1b66"'
            buildConfigField "String", "PUBLIC_API_KEY_VALUE", '"e3358cceba7bf5205e6a436ccec4996d"'
            buildConfigField "String", "MARVEL_BASE_URL", '"http://gateway.marvel.com/public/"'

        }

        release {
            minifyEnabled false
            buildConfigField "String", "PRIVATE_API_KEY_VALUE", '"your-private-apikey"'
            buildConfigField "String", "PUBLIC_API_KEY_VALUE", '"your-public-apikey"'
            buildConfigField "String", "MARVEL_BASE_URL", '"http://gateway.marvel.com/public/"'

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    def lib = rootProject.ext.generalDependencies
    implementation lib.constraintlayout
    implementation lib.appcompat
    implementation lib.design
    implementation lib.recyclerview
    implementation lib.cardview
    implementation lib.picasso
    implementation lib.glide
    implementation lib.retrofit
    implementation lib.retrofit2
    implementation lib.rxandroid
    implementation lib.rxjava
    implementation lib.kotlin
    testImplementation lib.mockito
    testImplementation lib.junit
    testImplementation lib.mockitokotlin
}

android.testOptions.unitTests.all {
    // Configure whether failing tests should fail the build
    ignoreFailures false

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}
repositories {
    mavenCentral()
}


